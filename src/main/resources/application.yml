logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'



spring:
  profiles:
    active: prod

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${MEMBER_DB_URL}
    username: ${DB_MASTER_USERNAME}
    password: ${DB_MASTER_PASSWORD}

  batch:
    jdbc:
      initialize-schema: ALWAYS
    job:
      enabled: true

  jpa:
    database: POSTGRESQL
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: none
    open-in-view: false
    #    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 10
        highlight_sql: true

  sleuth:
    http:
      include-patterns=/member/nicknameChange,/feign/member/getNickname
      ignore-patterns=/health

  application:
    name: member

server:
  port: 8081

management:
  metrics:
    web:
      server:
        auto-time-requests: true
  endpoints:
    web:
      exposure:
        include: '*'  # 이 부분을 수정
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: B3
      produce: B3
  zipkin:
    tracing:
      endpoint: http://${EC2_PUBLIC_DNS}:9411/api/v2/spans