logging:
  level:
    com.recipia.member: debug
    org.springframework.web.servlet: debug
    org.hibernate.orm.jdbc.bind: trace
#    org.springframework.cloud.sleuth: info

#  pattern:
#    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'


spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: {url}
    username: {username}
    password: {password}

#  datasource:
#    url: jdbc:h2:mem:~/RecipiaMember
#    driver-class-name: org.h2.Driver
#    username: sa
#    password:

  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 10
        highlight_sql: true


#  kafka:
#    bootstrap-servers: localhost:9095
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    consumer:
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      group-id: recipia


  application:
    name: member

#  zipkin:
#    base-url: http://localhost:9411/
#
#  sleuth:
#    enabled: true
#    sampler:
#      probability: 1.0


server:
  port: 8081
---

